name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_DEFAULT_VERSION: "3.11"

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true

      - name: Install dependencies
        run: |
          pdm install || (pdm lock --update-reuse && pdm install)

      - name: Run tests with coverage
        run: make test-cov

      - name: Upload coverage to Codecov
        if: matrix.python-version == env.PYTHON_DEFAULT_VERSION && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: true

      - name: Install dependencies
        run: |
          pdm install || (pdm lock --update-reuse && pdm install)

      - name: Run lint checks
        run: make lint

      - name: Check formatting
        run: make format-check

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: true

      - name: Install dependencies
        run: |
          pdm install || (pdm lock --update-reuse && pdm install)

      - name: Build package
        run: make build

      - name: Check package metadata
        run: pdm run twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  cli-test:
    name: CLI Integration Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ env.PYTHON_DEFAULT_VERSION }}
          cache: true

      - name: Install dependencies
        run: |
          pdm install || (pdm lock --update-reuse && pdm install)

      - name: Test CLI help
        run: pdm run milvus-ingest --help

      - name: Test schema management help
        run: pdm run milvus-ingest schema help

      - name: List built-in schemas
        run: pdm run milvus-ingest schema list

      - name: Show built-in schema details
        run: pdm run milvus-ingest schema show simple

      - name: Create test schema
        run: |
          echo '{"collection_name": "test_collection", "fields": [{"name": "id", "type": "Int64", "is_primary": true}, {"name": "text", "type": "VarChar", "max_length": 100}]}' > my_schema.json

      - name: Test schema validation
        run: pdm run milvus-ingest generate --schema my_schema.json --validate-only

      - name: Test built-in schema generation
        run: pdm run milvus-ingest generate --builtin simple --total-rows 10 --preview

      - name: Test custom schema generation
        run: pdm run milvus-ingest generate --schema my_schema.json --total-rows 10 --preview
